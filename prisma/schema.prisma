generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player      player[]
}

model exercise {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @db.VarChar(255)
  description     String?           @db.VarChar(255)
  coach_id        String            @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  user            user              @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_exercise player_exercise[]
}

model parent {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  player_id  String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  player     player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id                  String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String            @db.Uuid
  academy_id          String            @db.Uuid
  date_of_birth       DateTime          @db.Date
  position            String            @db.VarChar(255)
  achievements        String?           @db.VarChar(255)
  performance_metrics String?           @db.VarChar(255)
  created_at          DateTime          @default(now()) @db.Timestamp(6)
  updated_at          DateTime          @default(now()) @db.Timestamp(6)
  parent              parent[]
  academy             academy           @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_exercise     player_exercise[]
}

model player_exercise {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id   String   @db.Uuid
  exercise_id String   @db.Uuid
  goal        String?  @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  exercise    exercise @relation(fields: [exercise_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player      player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  academy     academy[]
  exercise    exercise[]
  parent      parent[]
  player      player[]
}
